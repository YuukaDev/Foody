[{"D:\\Developing\\foody\\src\\index.js":"1","D:\\Developing\\foody\\src\\App.js":"2","D:\\Developing\\foody\\src\\components\\Navigation\\Navigation.js":"3","D:\\Developing\\foody\\src\\components\\About\\About.js":"4","D:\\Developing\\foody\\src\\pages\\Header\\Header.js":"5","D:\\Developing\\foody\\src\\components\\Hero\\Hero.js":"6","D:\\Developing\\foody\\src\\pages\\Main\\Main.js":"7","D:\\Developing\\foody\\src\\components\\ContentRecipes\\ContentRecipes.js":"8","D:\\Developing\\foody\\src\\Test.js":"9","D:\\Developing\\foody\\src\\pages\\Recipes\\Recipes.js":"10","D:\\Developing\\foody\\src\\components\\SignUp\\SignUp.js":"11","D:\\Developing\\foody\\src\\components\\firebase\\firebase.js":"12","D:\\Developing\\foody\\src\\components\\Contact\\Contact.js":"13","D:\\Developing\\foody\\src\\components\\Login\\Login.js":"14"},{"size":701,"mtime":1640644260010,"results":"15","hashOfConfig":"16"},{"size":707,"mtime":1640644275893,"results":"17","hashOfConfig":"16"},{"size":1452,"mtime":1640545525575,"results":"18","hashOfConfig":"16"},{"size":2151,"mtime":1639875255513,"results":"19","hashOfConfig":"16"},{"size":245,"mtime":1640544910682,"results":"20","hashOfConfig":"16"},{"size":529,"mtime":1640035058706,"results":"21","hashOfConfig":"16"},{"size":233,"mtime":1640545052376,"results":"22","hashOfConfig":"16"},{"size":2257,"mtime":1640644109170,"results":"23","hashOfConfig":"16"},{"size":1640,"mtime":1640307698559,"results":"24","hashOfConfig":"16"},{"size":227,"mtime":1640384474702,"results":"25","hashOfConfig":"16"},{"size":3690,"mtime":1640544746479,"results":"26","hashOfConfig":"16"},{"size":503,"mtime":1640644513943,"results":"27","hashOfConfig":"16"},{"size":560,"mtime":1640545758690,"results":"28","hashOfConfig":"16"},{"size":3686,"mtime":1640644309292,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sb2fkl",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Developing\\foody\\src\\index.js",[],"D:\\Developing\\foody\\src\\App.js",[],"D:\\Developing\\foody\\src\\components\\Navigation\\Navigation.js",["62"],"import React, { useState } from \"react\";\r\n\r\nimport Logo from \"../assets/images/logo.png\";\r\n\r\nfunction Navigation() {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <header>\r\n        <a className=\"logo\" href=\"/\">\r\n          <img src={Logo} alt=\"logo\" />\r\n        </a>\r\n        <nav>\r\n          <ul className=\"nav__links\">\r\n            <li>\r\n              <a href=\"/\">Home</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#about\">About</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/recipes\">Recipes</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#contact\">Contact</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <a\r\n          className=\"cta\"\r\n          href=\"/signup\"\r\n        >\r\n          Sign Up\r\n        </a>\r\n        <p className=\"menu cta\" onClick={() => setOpen(!open)}>\r\n          <i className=\"fas fa-bars\"></i>\r\n        </p>\r\n      </header>\r\n      <div className={!open ? \"overlay\" : \"overlay overlay--active\"}>\r\n        <a className=\"close\" onClick={() => setOpen(!open)}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </a>\r\n        <div className=\"overlay__content\">\r\n          <a href=\"/\">Home</a>\r\n          <a href=\"/about\">About</a>\r\n          <a href=\"#recipes\">Recipes</a>\r\n          <a href=\"#cotact\">Contact</a>\r\n          <a href=\"/signup\">Sign Up</a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n",["63","64"],"D:\\Developing\\foody\\src\\components\\About\\About.js",[],"D:\\Developing\\foody\\src\\pages\\Header\\Header.js",[],"D:\\Developing\\foody\\src\\components\\Hero\\Hero.js",[],"D:\\Developing\\foody\\src\\pages\\Main\\Main.js",[],"D:\\Developing\\foody\\src\\components\\ContentRecipes\\ContentRecipes.js",["65","66"],"D:\\Developing\\foody\\src\\Test.js",[],"D:\\Developing\\foody\\src\\pages\\Recipes\\Recipes.js",[],"D:\\Developing\\foody\\src\\components\\SignUp\\SignUp.js",["67"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../firebase/firebase\";\r\n\r\nimport { Form, Button, Card, Container, FormLabel } from \"react-bootstrap\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nfunction SignUp() {\r\n  const [registerEmail, setRegisterEmail] = useState(\"\");\r\n  const [registerPassword, setRegisterPassword] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    setUser(currentUser);\r\n  });\r\n\r\n  const registerUser = async () => {\r\n    if (registerEmail === \"\" && registerPassword === \"\") {\r\n      alert(\"no\");\r\n    } else {\r\n      try {\r\n        await createUserWithEmailAndPassword(\r\n          auth,\r\n          registerEmail,\r\n          registerPassword\r\n        );\r\n        console.log(user);\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ backgroundColor: \"#0a0a0b\" }}>\r\n      <Navigation />\r\n      <Container\r\n        style={{\r\n          marginTop: \"100px\",\r\n        }}\r\n        className=\"d-flex justify-content-center align-items-center\"\r\n      >\r\n        <Card\r\n          style={{ width: \"28rem\", backgroundColor: \"#2a4d69\" }}\r\n          className=\"p-5\"\r\n        >\r\n          <Card.Body>\r\n            <h2 className=\"fs-1 text-light\">Sign Up</h2>\r\n          </Card.Body>\r\n          <Form>\r\n            <Form.Group className=\"p-2\">\r\n              <Form.Label className=\"fs-4 text-light\" htmlFor=\"email\" required>\r\n                Username\r\n              </Form.Label>\r\n              <Form.Control\r\n                onChange={(e) => {\r\n                  setRegisterEmail(e.target.value);\r\n                }}\r\n                autoComplete=\"off\"\r\n                id=\"username\"\r\n                type=\"text\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"p-2\">\r\n              <Form.Label className=\"fs-4 text-light\" htmlFor=\"email\" required>\r\n                Email\r\n              </Form.Label>\r\n              <Form.Control\r\n                onChange={(e) => {\r\n                  setRegisterEmail(e.target.value);\r\n                }}\r\n                autoComplete=\"off\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"p-2\">\r\n              <Form.Label\r\n                className=\"fs-4 text-light\"\r\n                htmlFor=\"password\"\r\n                required\r\n              >\r\n                Password\r\n              </Form.Label>\r\n              <Form.Control\r\n                onChange={(e) => {\r\n                  setRegisterPassword(e.target.value);\r\n                }}\r\n                autoComplete=\"off\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"#4b86b4\",\r\n                outline: \"none\",\r\n                border: \"none\",\r\n                width: \"100%\",\r\n              }}\r\n              onClick={registerUser}\r\n              className=\"mt-3\"\r\n              type=\"button\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n          <div className=\"mt-3 text-center text-light\">\r\n            Already have an account?\r\n            <a\r\n              style={{ color: \"#72b2e2\", textDecoration: \"none\" }}\r\n              href=\"/login\"\r\n            >\r\n              {\" \"}\r\n              Login\r\n              <br />\r\n            </a>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\Developing\\foody\\src\\components\\firebase\\firebase.js",[],"D:\\Developing\\foody\\src\\components\\Contact\\Contact.js",["68","69","70"],"import React from \"react\";\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div className=\"contact-wrapper\" id=\"contact\">\r\n      <div className=\"title-contact\">\r\n        <h1>You Can Contact Here</h1>\r\n      </div>\r\n      <div className=\"contact-container\">\r\n        <a href=\"#\">\r\n          <i className=\"fab fa-instagram\"></i>\r\n        </a>\r\n        <a href=\"#\">\r\n          <i className=\"fab fa-github\"></i>\r\n        </a>\r\n        <a href=\"#\">\r\n          <i className=\"fab fa-twitter\"></i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","D:\\Developing\\foody\\src\\components\\Login\\Login.js",["71"],{"ruleId":"72","severity":1,"message":"73","line":40,"column":9,"nodeType":"74","endLine":40,"endColumn":61},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"83","line":8,"column":10,"nodeType":"81","messageId":"82","endLine":8,"endColumn":14},{"ruleId":"79","severity":1,"message":"84","line":9,"column":41,"nodeType":"81","messageId":"82","endLine":9,"endColumn":50},{"ruleId":"72","severity":1,"message":"85","line":10,"column":9,"nodeType":"74","endLine":10,"endColumn":21},{"ruleId":"72","severity":1,"message":"85","line":13,"column":9,"nodeType":"74","endLine":13,"endColumn":21},{"ruleId":"72","severity":1,"message":"85","line":16,"column":9,"nodeType":"74","endLine":16,"endColumn":21},{"ruleId":"79","severity":1,"message":"84","line":9,"column":41,"nodeType":"81","messageId":"82","endLine":9,"endColumn":50},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'FormLabel' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]