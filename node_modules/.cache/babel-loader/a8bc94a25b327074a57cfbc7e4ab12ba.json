{"ast":null,"code":"var _jsxFileName = \"D:\\\\Developing\\\\foody\\\\src\\\\components\\\\SignUp\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase/firebase\";\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\nimport Navigation from \"../Navigation/Navigation\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  age: yup.number().required()\n});\n\nfunction SignUp() {\n  _s();\n\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const registerUser = async () => {\n    if (registerEmail === error && registerPassword === error) {\n      alert(\"da\");\n    } else {\n      try {\n        await createUserWithEmailAndPassword(auth, registerEmail, registerPassword);\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#0a0a0b\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: \"100px\"\n      },\n      className: \"d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"28rem\",\n          backgroundColor: \"#2a4d69\"\n        },\n        className: \"p-5\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"fs-1 text-light\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            onChange: e => {\n              setRegisterEmail(e.target.value);\n            },\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fs-4 text-light\",\n              htmlFor: \"email\",\n              required: true,\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoComplete: \"off\",\n              id: \"username\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            onChange: e => {\n              setRegisterEmail(e.target.value);\n            },\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fs-4 text-light\",\n              htmlFor: \"email\",\n              required: true,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoComplete: \"off\",\n              id: \"email\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            onChange: e => {\n              setRegisterPassword(e.target.value);\n            },\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fs-4 text-light\",\n              htmlFor: \"password\",\n              required: true,\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoComplete: \"off\",\n              id: \"password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: \"#4b86b4\",\n              outline: \"none\",\n              border: \"none\",\n              width: \"100%\"\n            },\n            onClick: registerUser,\n            className: \"mt-3\",\n            type: \"button\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 text-center text-light\",\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              color: \"#72b2e2\",\n              textDecoration: \"none\"\n            },\n            href: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"ZggOV9QmQXmBf2y8m8EB10m3Cfo=\", false, function () {\n  return [useForm];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Developing/foody/src/components/SignUp/SignUp.js"],"names":["React","useState","useForm","createUserWithEmailAndPassword","auth","Form","Button","Card","Container","Navigation","yupResolver","yup","schema","object","shape","name","string","required","age","number","SignUp","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","error","setError","register","handleSubmit","errors","registerUser","alert","err","console","log","message","backgroundColor","marginTop","width","onSubmit","e","target","value","outline","border","color","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../firebase/firebase\";\r\n\r\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  age: yup.number().required(),\r\n});\r\n\r\nfunction SignUp() {\r\n  const [registerEmail, setRegisterEmail] = useState(\"\");\r\n  const [registerPassword, setRegisterPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const registerUser = async () => {\r\n    if (registerEmail === error && registerPassword === error) {\r\n      alert(\"da\");\r\n    } else {\r\n      try {\r\n        await createUserWithEmailAndPassword(\r\n          auth,\r\n          registerEmail,\r\n          registerPassword\r\n        );\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ backgroundColor: \"#0a0a0b\" }}>\r\n      <Navigation />\r\n      <Container\r\n        style={{\r\n          marginTop: \"100px\",\r\n        }}\r\n        className=\"d-flex justify-content-center align-items-center\"\r\n      >\r\n        <Card\r\n          style={{ width: \"28rem\", backgroundColor: \"#2a4d69\" }}\r\n          className=\"p-5\"\r\n        >\r\n          <Card.Body>\r\n            <h2 className=\"fs-1 text-light\">Sign Up</h2>\r\n          </Card.Body>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Form.Group\r\n              onChange={(e) => {\r\n                setRegisterEmail(e.target.value);\r\n              }}\r\n              className=\"p-2\"\r\n            >\r\n              <Form.Label className=\"fs-4 text-light\" htmlFor=\"email\" required>\r\n                Username\r\n              </Form.Label>\r\n              <Form.Control autoComplete=\"off\" id=\"username\" type=\"text\" />\r\n            </Form.Group>\r\n            <Form.Group\r\n              onChange={(e) => {\r\n                setRegisterEmail(e.target.value);\r\n              }}\r\n              className=\"p-2\"\r\n            >\r\n              <Form.Label className=\"fs-4 text-light\" htmlFor=\"email\" required>\r\n                Email\r\n              </Form.Label>\r\n              <Form.Control autoComplete=\"off\" id=\"email\" type=\"email\" />\r\n            </Form.Group>\r\n            <Form.Group\r\n              onChange={(e) => {\r\n                setRegisterPassword(e.target.value);\r\n              }}\r\n              className=\"p-2\"\r\n            >\r\n              <Form.Label\r\n                className=\"fs-4 text-light\"\r\n                htmlFor=\"password\"\r\n                required\r\n              >\r\n                Password\r\n              </Form.Label>\r\n              <Form.Control autoComplete=\"off\" id=\"password\" type=\"password\" />\r\n            </Form.Group>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"#4b86b4\",\r\n                outline: \"none\",\r\n                border: \"none\",\r\n                width: \"100%\",\r\n              }}\r\n              onClick={registerUser}\r\n              className=\"mt-3\"\r\n              type=\"button\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n          <div className=\"mt-3 text-center text-light\">\r\n            Already have an account?{\" \"}\r\n            <a\r\n              style={{ color: \"#72b2e2\", textDecoration: \"none\" }}\r\n              href=\"/login\"\r\n            >\r\n              Login\r\n            </a>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}